This might be helpful to sort dates

class Article {
  constructor(title, date) {
    this.title = title;
    this.date = date;
  }

  static compare(articleA, articleB) {
    return articleA.date - articleB.date;
  }
}

// usage
let articles = [
  new Article("HTML", new Date(2019, 1, 1)),
  new Article("CSS", new Date(2019, 0, 1)),
  new Article("JavaScript", new Date(2019, 11, 1))
];

articles.sort(Article.compare);

alert( articles[0].title ); // CSS

https://javascript.info/static-properties-methods

FontAwesome: <script src="https://kit.fontawesome.com/97922a4531.js" crossorigin="anonymous"></script>

Checkmark icon: <i class="fa-regular fa-square-check"></i>
Inbox icon: <i class="fa-solid fa-inbox"></i>
Calender day icon: <i class="fa-solid fa-calendar-day"></i>
Calendar week icon: <i class="fa-solid fa-calendar-week"></i>
Tasks icon: <i class="fa-solid fa-list-check"></i>
Plus icon: <i class="fa-solid fa-plus"></i>

I need an array to store the projects and another array to store the tasks.
projectArray stores projects and taskArray stores the tasks for each project.

The project array stored in local storage is just a string, that is a list of
the projects. 

The task array stored in local storage is a JSON obect that has a project as key and then all the tasks as values (one value is also the project name): {project: "Yard Work", desc: "Mow grass", dueDate: "06-15-2023", priority: "low","in-progress"}
desc
: 
"Mow grass"
dueDate
: 
"06-15-2023"
priority
: 
"low"
project
: 
"Yard Work"
status
: 
"in-progress"

Both of these arrays are periodically stored in local storage using the
setItem() method.

I need a function which retrieves associated tasks for a given project and then renders them onto the project display area populateTaskList.js. 

When the page starts up, it should load up the projectArray from local storage. The populateTaskList function populates the task table with values from localStorage.

I can either do this with a table that displays each task, or as divs like cards that display a task's properties including: (I chose a table)

Each table row has:

  A button to mark task complete (changes cell class to .strikout)
  Project
  Description
  Project
  Due Date
  Priority
  Project status (either 'in-progress' or 'completed')
  A button to delete the task from the list and from the taskArray. 

Functionality:
Inbox button - displays all tasks that do not have a project associated with them
Today - sorts then displays all tasks that are due today with their associated projects
This Week - sorts then displays all the tasks that are due this week with their associated projects

So when one of these functions is pressed the results are displayed in the display area and display:
  Task with title, description, due date, priority and notes AND project also a delete button to delete the task
  
Methods:
  Sort method for Today
  Sort method for This week
  Maybe todayTasks pick all tasks for today
        weekTasks pick all tasks for the week
  Method to apply a new task to a project
  Method to create a new project and add it to the project array
  Method to create a new task and add it to the task array

List of modules in use:
  setDisplayTitle() - Takes user's click and displays appropriate title, In Box, Today, This Week
  createBlankTask - Creates a blank task in the project display area
 